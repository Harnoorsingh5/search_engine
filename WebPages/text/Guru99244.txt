https://www.guru99.com//java-design-patterns-interview-questions.html
Top 22 Java Design Patterns Interview Questions & Answers Home Testing Back Agile Testing BugZilla Cucumber Database Testing ETL Testing Jmeter JIRA Back JUnit LoadRunner Manual Testing Mobile Testing Mantis Postman QTP Back Quality Center (ALM) RPA SAP Testing Selenium SoapUI Test Management TestLink SAP Back ABAP APO Beginner Basis BODS BI BPC CO Back CRM Crystal Reports FICO HANA HR MM QM Payroll Back PI/PO PP SD SAPUI5 Security Solution Manager Successfactors SAP Tutorials Web Back Apache Android AngularJS ASP.Net C C# C++ CodeIgniter DBMS Back Java JavaScript JSP Kotlin Linux MariaDB MS Access MYSQL Node.js Back Perl PHP PL/SQL PostgreSQL Python ReactJS Ruby & Rails Scala SQL Back SQL Server SQLite UML VB.Net VBScript Web Services WPF Must Learn! Back Accounting Algorithms Blockchain Business Analyst Build Website CCNA Cloud Computing COBOL Compiler Design Embedded Systems Back Ethical Hacking Excel Tutorials Go Programming IoT ITIL Jenkins MIS Networking Operating System Prep Back PMP Photoshop Project Management Reviews Salesforce SEO Software Engineering VBA Big Data Back AWS BigData Cassandra Cognos Data Warehousing DevOps HBase Back Hive Informatica MicroStrategy MongoDB NiFi OBIEE Pentaho Back Power BI Qlikview Tableau Talend ZooKeeper Live Projects Back Live Agile Testing Live HP ALM Live Java Project Live Mobile Testing Live Payment Gateway Live PHP Project Live Projects Hub Live Python Project Back Live Selenium Project Live Selenium 2 Live Security Testing Live Testing Project Live Testing 2 Live Telecom Live UFT/QTP Testing AI Back Artificial Intelligence Data Science Keras NLTK Back NumPy PyTorch R Programming TensorFlow Blog Top 22 Java Design Patterns Interview Questions & Answers Details Last Updated: 25 March 2020 1) Explain what is Java Design Pattern? A design pattern is a language independent strategy for solving common object-oriented design problem. It describes how to structure classes to meet a given requirement. 2) Explain what is creational design patterns and Factory pattern? Creational design pattern: This pattern is used to define and describe how objects are created at class instantiation time. Factory pattern: The factory pattern is used to create an object without exposing the creation logic to the client and refer to a newly created object using a common interface. 3) Which design pattern is used to get a way to access the elements of a collection object in sequential manner? Iterator pattern is used to get a way to access the elements of a collection object in sequential manner. 4) When service locator pattern is used? When we want to locate various services using JNDI we use service locator pattern. 5) Mention in how many ways can you create singleton pattern? To create single objects there are two famous ways Lazy loading Eager loading 6) Mention which pattern is used when we need to decouple an abstraction from its implementation? When we want to decouple an abstraction from its implementation in order that two can vary independently we use bridge pattern. 7) Mention which design pattern will be helpful to add new functionality to an existing object? A decorator pattern allows a user to add new functionality to an existing object without changing its structure. 8) Explain how can you create a Singleton class in Java? It is two step process, First make the constructor private so that new operator cannot be used to instantiate the class Return an object of the object if not null otherwise create the object and return the same via a method. 9) Is it possible to write thread safe singleton in Java? To write thread safe singleton in Java there are multiple ways for example by using static singleton instance initialized during class loading, by writing singleton using double checked locking. Java Enum is the simplest way to create thread safe singleton. 10) Mention how one should describe a design pattern? To describe a design pattern, following things need to be taken care of Pattern name and classification Problem and solution Consequences : Variation and language dependent alternatives should also be addressed Know Uses: Identify the uses in the real systems and its efficiency 11) Mention why access to the non-static variable is not allowed from static method in Java? You cannot access non-static data from static context because non-static variable are associated with a specific instance of an object while static is not associated with any instance. 12) Mention which pattern is useful when one has to pass data with multiple attributes in one shot from client to server? Transfer Object Pattern is useful when one has to pass data with multiple attributes in one shot from client to the server. 13) Name some of the entities of DAO pattern? Some of the entities of DAO include, Data access object concrete class Data access object interface Model object or value object 14) Mention when can you use the Intercepting pattern? Intercepting pattern is used when you have to do some pre-processing or post processing with request or response of the application. 15) Mention when to use a Factory Pattern? Factory pattern can be used, When a class does not know which class of objects needs to create When class specifies its sub-classes to specify which objects to create In programming language, you can use factory pattern where you have to create an object of any one of sub-classes depending on the given data 16) Explain in singleton pattern whether it is better to make the whole getinstance() method synchronized or just critical section is enough? Which one is preferable? Synchronization of whole getinstance() method is costly and is only needed during the initialization on singleton instance, to stop creating another instance of Singleton. Therefore it is better to only synchronize critical section and not the whole method. 17) Mention in how many ways can you write singleton class in Java? One can write singleton class in Java in four ways Singleton with public static final field initialized during class loading Singleton generated by static nested class, also referred as singleton holder pattern Singleton by synchronizing get instance () method From Java 5 on-wards using Enums 18) Explain how can you prevent creating another instance of singleton using clone() method? The preferred way to prevent creating another instance of a singleton is by not implementing Cloneable interface and if you do just throw an exception from clone() method “ not to create a clone of singleton class”. 19) Mention what is the difference between “throw” and “throws”? Keyword “Throw” is used to explicitly throw as an exception, while “Throws” is utilized to handle checked exceptions for re-intimating the compiler that exceptions are being handled. The throws need to be used in the method’s definition and also while invoking the method that raises checked exceptions. 20) Mention which classes in JDK uses singleton pattern? Java.lang.Runtime classes uses singleton pattern in JDK. 21) Mention what is the limitation of using singleton pattern? The singleton pattern ensures that a class has only one instance and to provide a global point of access to it. But at the same time this becomes its limitation as most classes in an application you will need to create multiple instances. 22) Mention what is the difference between VO and JDO? The difference between JDO and VO is that the JDO is a persistent technology that compete against entity beans in enterprise application development. It enables you to create POJO (plain old java objects) and persist them to the database. While VO stands for value objects represents an abstract design pattern used in conjuction with entity beans, jdbc and possibly even JDO to overcome commonly found isolation and transactional problems in enterprise apps.   Prev Report a Bug Next YOU MIGHT LIKE: JavaScript Difference Between =, ==, and === in JavaScript [Examples] What is = in JavaScript? Equal to (=) is an assignment operator, which sets the variable on the... Read more Java Tutorials Java Spring Tutorial: Features, History, MVC Framework Architecture What is the Spring framework? Spring is a easy to use open-source Java MVC framework provides... Read more JavaScript Typescript vs JavaScript: What's the Difference? What is JavaScript? JavaScript is a scripting language which helps you create interactive web... Read more Java Tutorials JAVA Programming Tutorial for Beginners PDF Java is the most popular programming language & is the language of choice for Android programming. Key... Read more Java Tutorials Java String replace(), replaceFirst() & replaceAll() Method EXAMPLE Java String has three types of Replace method replace replaceAll replaceFirst. With the help of... Read more Java Tutorials String charAt() Method in Java with Example Why use string "charAt" Method? The charat method returns the character at the definite index. In this... Read more 1) Java Platform 2) Java Virtual Machine 3) How to install java 4) Download & Install Java in Linux 5) First Java Program 6) Concept of OOPs 7) Data Abstraction 8) Encapsulation 9) Java Variables 10) Class & Objects 11) Java Arrays 12) Array of Objects 13) ArrayList in Java 14) Java Strings 15) String Length() Method 16) String indexOf() Method 17) String charAt() Method 18) String compareTo() Method 19) String contains() Method 20) String endsWith() Method 21) Java String replace() 22) toLowercase() & toUpperCase() 23) Convert a Java String to Integer 24) HashMaps in Java 25) Command-line 26) This Keyword 27) Garbage Collection 28) Static Variables 29) Stack Heap 30) Inheritance 31) Polymorphism 32) Abstract Method & Class 33) Java Interface 34) Interface vs Abstract Class 35) Java Constructors 36) Java Packages 37) Exception Handling 38) User-defined 39) Throws 40) Trick with For Loop 41) Switch in Java 42) Maths with Java 43) Generate Random Number 44) Date in Java 45) Multithreading in Java 46) Java GUI – Swing 47) Split a String 48) Buffered Reader 49) Java Reflection API Tutorials 50) Check Prime Number 51) Convert JSON to XML using Gson and JAXB 52) Prime Number From 1 to 100 53) Convert Char to String 54) Fibonacci Series 55) Check Armstrong Number 56) Reverse String using Recursion 57) Check Palindrome Number 58) Bubble Sort Program 59) Insertion Sort Algorithm 60) Selection Sorting 61) Java Tools for Developers 62) Groovy Script Tutorial 63) Java Spring Tutorial 64) Apache ANT Tutorial 65) JasperReports Tutorial 66) C++ Vs JAVA 67) JDK Vs JRE Vs JVM 68) Java Vs C# 69) Java Vs Python 70) Java Vs Scala 71) Java Interview Q & A 72) Java Design Patterns Interview Q & A 73) JMS Interview Q & A 74) Groovy Interview Q & A 75) JAVA Programming PDF Java Tutorials Top Tutorials About About Us Advertise with Us Write For Us Contact Us Career Suggestion SAP Career Suggestion Tool Software Testing as a Career Selenium Testing Hacking Interesting eBook Blog Quiz SAP eBook SAP Java Python Execute online Execute Java Online Execute Javascript Execute HTML Execute Python Jmeter Informatica JIRA © Copyright - Guru99 2020         Privacy Policy  |  Affiliate Disclaimer  |  ToS
