https://www.guru99.com//groovy-interview-questions.html
Top 22 Groovy Interview Questions & Answers Home Testing Back Agile Testing BugZilla Cucumber Database Testing ETL Testing Jmeter JIRA Back JUnit LoadRunner Manual Testing Mobile Testing Mantis Postman QTP Back Quality Center (ALM) RPA SAP Testing Selenium SoapUI Test Management TestLink SAP Back ABAP APO Beginner Basis BODS BI BPC CO Back CRM Crystal Reports FICO HANA HR MM QM Payroll Back PI/PO PP SD SAPUI5 Security Solution Manager Successfactors SAP Tutorials Web Back Apache Android AngularJS ASP.Net C C# C++ CodeIgniter DBMS Back Java JavaScript JSP Kotlin Linux MariaDB MS Access MYSQL Node.js Back Perl PHP PL/SQL PostgreSQL Python ReactJS Ruby & Rails Scala SQL Back SQL Server SQLite UML VB.Net VBScript Web Services WPF Must Learn! Back Accounting Algorithms Blockchain Business Analyst Build Website CCNA Cloud Computing COBOL Compiler Design Embedded Systems Back Ethical Hacking Excel Tutorials Go Programming IoT ITIL Jenkins MIS Networking Operating System Prep Back PMP Photoshop Project Management Reviews Salesforce SEO Software Engineering VBA Big Data Back AWS BigData Cassandra Cognos Data Warehousing DevOps HBase Back Hive Informatica MicroStrategy MongoDB NiFi OBIEE Pentaho Back Power BI Qlikview Tableau Talend ZooKeeper Live Projects Back Live Agile Testing Live HP ALM Live Java Project Live Mobile Testing Live Payment Gateway Live PHP Project Live Projects Hub Live Python Project Back Live Selenium Project Live Selenium 2 Live Security Testing Live Testing Project Live Testing 2 Live Telecom Live UFT/QTP Testing AI Back Artificial Intelligence Data Science Keras NLTK Back NumPy PyTorch R Programming TensorFlow Blog Top 22 Groovy Interview Questions & Answers Details Last Updated: 25 March 2020 1) Explain what is Groovy? Groovy is an object-oriented programming language for JVM (Java Virtual Machines).  It is used to combine Java modules, to write Java application and to extend existing Java application. 2) Why use Groovy? For Java programmers it provides familiar syntax It has a rich stock of Java Libraries It easily integrate with your existing infrastructure like Servlet Containers, App Servers, Loads of databases with JDBC drivers, Completely Object Oriented It possesses a reusable and assignable pieces of code Operators can be overloaded Literal declaration for maps, arrays, ranges and regular expressions It has efficient object navigation 3) What is the limitation of Groovy? Groovy can be slower Groovy might need lots of memory Groovy start up time requires improvement It requires Java knowledge It takes sometimes to get use to like New Syntax, closures, default typing, Documentation is thin 4) Explain how Scripts are run in Groovy? Groovy supports plain script; it does not require a class declaration. At the front of the script, imports are supported at the same way that it can be at the front of a class. In Groovy, you have to use word def  to declare a function outside of a class. 5) Mention what are some features does Groovy JDK offers? Groovy has added new methods compare to old version like Various array types and object streams with newly Groovy oriented methods like Object.every(), Object.each() etc. and also include new features like "String BufferedReader.getText()" and "InputStream.eachLine(Closure)". 6) Mention what is the role of closure and listeners in Groovy? Groovy does not support anonymous inner classes; it is possible to determine action listeners inline through the means of closures. In Groovy, listeners closure are used as a ListenerAdapter where only one method of interest is overridden. 7) Explain how you can add stuff to the classpath when running things in groovy or groovysh? You can add things to your $CLASSPATH environment variable.  Another possibility is to build a .groovy/lib directory in your home directory and append whatever jars you want to be available by default. 8) Mention what is the license for Groovy? Groovy depend at runtime on the ASM library as well as Java 1.4 and the Groovy jar. 9) Explain what is ExpandoMetaClass in Groovy? ExpandoMetaClass is used to add methods, properties, static methods and constructors. Expandoclass does not inherited by default; you have to call ExpandoMetaClass.enableGlobally(). 10) Explain how Groovy string is expressed? Groovy string is referred as Gstring. It is surrounded by double quotes, for regular strings it uses single quotes It may contain Groovy Expressions noted in ${} Square bracket syntax may be applied like charAt(i) 11) How could you retrieve a single value from data base using Groovy? To recover a single value from the database you can use the command row = sql.firstRow ('select columnA, column from tableName') println "Row: columnA = $ {row.columnA} and column = ${row.columnB}" 12) Explain how you can query in Groovy? Let see a simple example of how Groovy calls out the query import groovy.sql.sql

sql = Sql.newInstance ('jdbc: jtds: sqlserver://serverName/dbName-Class;domain=domainName','username','password','net.sourceforge.jtds.jdbc.driver')

sql.eachRow ('select * from tableName') {print "$it.id--${it.firstName} –"  } 13) Explain how you can build AST (Abstract Syntax Trees) in Groovy from string? You can build AST in Groovy from Strings Code From DSL like specification An AstBuilder object provides an API to build AST from strings of Groovy Source Code. For example List<ASTNode> nodes = new AstBuilder (). buildFromString ("\"Hello\" ") 14) Explain how you can include a groovy script in another groovy? You can include a groovy script with another groovy by using the following code. When put this code at the top of the script it will bring in the contents of a groovy file. Evaluate(new file("../tools/Tools.groovy")) 15) Explain what is Groovysh? Groovysh is a command line application that enables an easy access to evaluate Groovy expressions, define classes and run experiments. 16) Explain GroovyDoc comment? Like multiline comments, GroovyDoc comments are multiline but it starts with a /** and end with */.  Those comments are related with Type definitions (classes, interfaces, enums, annotations) Fields and properties definitions Methods definitions 17) Explain what are Bitwise Operators in Groovy? Bitwise operators can be implemented on a BYTE or an INT and return and INT. Bitwise operators offer 4 bitwise operators &: bitwise "and" I : bitwise "or" A : bitwise "xor" ~ : bitwise negation 18) List out the differences between Groovy and Java? All the packages and classes in Groovy is imported by default, you do not have to use the import statement explicitly Unlike Java where the methods are chosen at compile time, the methods in the Groovy are chosen based on the types of arguments at runtime In {…} block is reserved for closures, which means that you cannot build array literals with this syntax Like in Java, omitting a modifier on a field does not result in a package private field Automatic Resource Management or ARM block from java 7 are not supported in Groovy Java 8 lambdas are more or less considered as anonymous inner classes, and Groovy does not support that syntax 19) Explain the role of Grape dependency in Groovy? Grape is a JAR dependency manager included into Groovy.  It allows you to add quickly maven repository dependencies to your classpath, making scripting easier. The simplest use is adding an annotation to your script. 20) Explain what does the JsonSlurper class indicates? The JsonSlurper is a class that parses JSON text or reader content into Groovy data structures (objects) such as lists, maps, and primitive types like double, Boolean, string and Integer. 21) When "propertyMissing (String)" method is called? The "propertyMissing (String)" method is called when no getter method for a given property can be detected by the Groovy runtime. 22) Mention what relational operators is used for in Groovy? Relational operators allows you to compare between objects, to check whether the two objects are different or same or if one is less than, greater than or equal to others.   Prev Report a Bug Next YOU MIGHT LIKE: Java Tutorials String contains() Method in Java with Example What is contains()method in Java? The contains() method is Java method to check if String contains... Read more Java Tutorials Palindrome Program in Java: Check number is Palindrome or Not What is Palindrome Number? A Palindrome Number is a number that even when reversed is same as... Read more JavaScript Java vs JavaScript: Most Important Differences You Must Know What is Java? Java is a multi-platform, object-oriented, and network-centric, programming... Read more Java Tutorials How to Convert Char to String in Java (Examples) In this tutorial, we will study programs to To convert a character to String To convert a String to... Read more Java Tutorials How to Reverse a String in Java using Recursion In this example program, we will reverse a string entered by a user. We will create a function to... Read more Java Tutorials Java Spring Tutorial: Features, History, MVC Framework Architecture What is the Spring framework? Spring is a easy to use open-source Java MVC framework provides... Read more 1) Java Platform 2) Java Virtual Machine 3) How to install java 4) Download & Install Java in Linux 5) First Java Program 6) Concept of OOPs 7) Data Abstraction 8) Encapsulation 9) Java Variables 10) Class & Objects 11) Java Arrays 12) Array of Objects 13) ArrayList in Java 14) Java Strings 15) String Length() Method 16) String indexOf() Method 17) String charAt() Method 18) String compareTo() Method 19) String contains() Method 20) String endsWith() Method 21) Java String replace() 22) toLowercase() & toUpperCase() 23) Convert a Java String to Integer 24) HashMaps in Java 25) Command-line 26) This Keyword 27) Garbage Collection 28) Static Variables 29) Stack Heap 30) Inheritance 31) Polymorphism 32) Abstract Method & Class 33) Java Interface 34) Interface vs Abstract Class 35) Java Constructors 36) Java Packages 37) Exception Handling 38) User-defined 39) Throws 40) Trick with For Loop 41) Switch in Java 42) Maths with Java 43) Generate Random Number 44) Date in Java 45) Multithreading in Java 46) Java GUI – Swing 47) Split a String 48) Buffered Reader 49) Java Reflection API Tutorials 50) Check Prime Number 51) Convert JSON to XML using Gson and JAXB 52) Prime Number From 1 to 100 53) Convert Char to String 54) Fibonacci Series 55) Check Armstrong Number 56) Reverse String using Recursion 57) Check Palindrome Number 58) Bubble Sort Program 59) Insertion Sort Algorithm 60) Selection Sorting 61) Java Tools for Developers 62) Groovy Script Tutorial 63) Java Spring Tutorial 64) Apache ANT Tutorial 65) JasperReports Tutorial 66) C++ Vs JAVA 67) JDK Vs JRE Vs JVM 68) Java Vs C# 69) Java Vs Python 70) Java Vs Scala 71) Java Interview Q & A 72) Java Design Patterns Interview Q & A 73) JMS Interview Q & A 74) Groovy Interview Q & A 75) JAVA Programming PDF Java Tutorials Top Tutorials About About Us Advertise with Us Write For Us Contact Us Career Suggestion SAP Career Suggestion Tool Software Testing as a Career Selenium Testing Hacking Interesting eBook Blog Quiz SAP eBook SAP Java Python Execute online Execute Java Online Execute Javascript Execute HTML Execute Python Jmeter Informatica JIRA © Copyright - Guru99 2020         Privacy Policy  |  Affiliate Disclaimer  |  ToS
