https://www.guru99.com//spring-tutorial.html
Java Spring Tutorial: Features, History, MVC Framework Architecture Home Testing Back Agile Testing BugZilla Cucumber Database Testing ETL Testing Jmeter JIRA Back JUnit LoadRunner Manual Testing Mobile Testing Mantis Postman QTP Back Quality Center (ALM) RPA SAP Testing Selenium SoapUI Test Management TestLink SAP Back ABAP APO Beginner Basis BODS BI BPC CO Back CRM Crystal Reports FICO HANA HR MM QM Payroll Back PI/PO PP SD SAPUI5 Security Solution Manager Successfactors SAP Tutorials Web Back Apache Android AngularJS ASP.Net C C# C++ CodeIgniter DBMS Back Java JavaScript JSP Kotlin Linux MariaDB MS Access MYSQL Node.js Back Perl PHP PL/SQL PostgreSQL Python ReactJS Ruby & Rails Scala SQL Back SQL Server SQLite UML VB.Net VBScript Web Services WPF Must Learn! Back Accounting Algorithms Blockchain Business Analyst Build Website CCNA Cloud Computing COBOL Compiler Design Embedded Systems Back Ethical Hacking Excel Tutorials Go Programming IoT ITIL Jenkins MIS Networking Operating System Prep Back PMP Photoshop Project Management Reviews Salesforce SEO Software Engineering VBA Big Data Back AWS BigData Cassandra Cognos Data Warehousing DevOps HBase Back Hive Informatica MicroStrategy MongoDB NiFi OBIEE Pentaho Back Power BI Qlikview Tableau Talend ZooKeeper Live Projects Back Live Agile Testing Live HP ALM Live Java Project Live Mobile Testing Live Payment Gateway Live PHP Project Live Projects Hub Live Python Project Back Live Selenium Project Live Selenium 2 Live Security Testing Live Testing Project Live Testing 2 Live Telecom Live UFT/QTP Testing AI Back Artificial Intelligence Data Science Keras NLTK Back NumPy PyTorch R Programming TensorFlow Blog Java Spring Tutorial: Features, History, MVC Framework Architecture Details Last Updated: 25 March 2020 What is the Spring framework? Spring is a easy to use open-source Java MVC framework provides comprehensive support for developing Java applications easily and rapidly. Spring is a lightweight framework which can be thought of as a framework of frameworks because it offers support for various frameworks such as Hibernate, Struts, Tapestry, JSF, etc. In this tutorial, you will learn: What is the Spring framework? Features of Spring Framework Brief History of Spring Spring Framework Architecture Spring - MVC Framework Aspect-Oriented Programming Installation of Java Spring Advantages of Spring Framework Disadvantages of Spring Framework Features of Spring Framework Here are some most prominent features of Spring Framework: Predefined templates Easy to test Loose coupling Lightweight Fast development Powerful abstraction Offers an array of resources Declarative support Offers comprehensive tools Brief History of Spring Here, are important landmarks form the history of Spring: Spring framework was written by Rod Johnson and was first released in June 2002. Spring last version release in March 2004 Spring 1.2.6 version release in 2006 Spring 2.0 version release in Oct 2006 Spring 2.5 version release in Nov 2007 Spring 3 version release in Dec 2009 Spring 3.1 version release in Dec 2011 Spring framework 4 version release in Dec 2013 with Java 8 support Spring framework 4.2.0 version released on July 2015 Spring framework 4.2.1 version released in Sept 2015 Spring Framework 4.3 version released on 10 June 2016 Spring framework 5.0 version released on June 2017 Spring Framework Architecture The Spring Framework provides 20 modules which can be used based on an application requirement. The Core and Bean provide the fundamental part of the framework, including IoC and DI. Core Container The Core Container is further divided by subcomponents like Core, Beans, Context, and Expression Language modules. Let see each of these models in detail: Spring Core: The Core module provides all the primary component of the spring framework. It includes IoC (Inversion of Control) and Dependency Injection features. Spring Bean: This module offers BeanFactory, which is a sophisticated implementation of the factory pattern. Spring Context: The Context module builds on the solid base provided by the Core and Beans modules, and it is a medium which helps you to access any objects defined and configured. Spring Expression Languages (SpEL): This module offers expression language for modifying and querying object graph during the runtime. Data Access/Integration: The Data Access and Integration layer consist of the JDBC, ORM, JDBC, OXM, JMS, and Transaction modules. ORM: ORM module offers consistency/ portability to code irrespective of data access technologies. It will be based on object-oriented mapping concept. The JDBC module consists of a JDBC-abstraction layer. It helps you elements the need to perform JDBC related coding. OXM: Object XML Mappers (OCM) helps you to convert the objects into XML format and vice versa. The Java Messaging Service module offers features like producing and consuming messages. Transaction: This module offers declarative and programmatic management method for implementing unique interfaces and for all types of POJOs (Plain Old Java Object) Spring Web: Web: This module uses servlet listeners and a web-oriented application context. It also offers a feature of web-oriented integration and functionality for multi-part file upload. Web-servlet: This module stores MVC based implementation for web applications. Web-Socket: Module offers WebSocket based and two-way communication between the client and the server in web apps. Web-Portlet: This module is also called Spring-MVC-Portlet module. It offers for Spring-based Portlets and copies all the functionality of a Web-Servlet module. AOP: AOP language is a useful tool which allows developers to add enterprise functionality to the application. Instrumentation: This module offers class instrumentation and loader implementations. It is used for specific application servers. Test: This module provides support for testing of Spring components with TestNG or JUnit tools. It offers consistent loading of Spring ApplicationContexts and caching of those contexts. Spring - MVC Framework The Spring web MVC framework offers model-view-controller architecture offers components which helps you to be flexible and loosely coupled web applications. The MVC pattern allows you to separate different aspects of the application while offering loose coupling between these elements. Spring MVC also helps you to build flexible and loosely coupled web applications. The MVC design also allows you to separate business logic, presentation logic, and navigation logic. It also offers an elegant solution to use MVC in Spring Framework with the help of DispatcherServlet. How MVC works in Spring? DispatcherServlet receives a request. After that, the DispatcherServlet communicates with HandlerMapping. It also revokes controller associated with that specific request. The Controller processes this request by calling the service methods, and a ModelAndView object returned by the DispatcherServlet. The view name is sent to a ViewResolver to search the actual View to invoke. After that, DispatcherServlet is passed to View to render the result. By using the model data, the View renders and send back result back to the user. Aspect-Oriented Programming Aspect-oriented programming allows the global properties of a program to decide how it is compiled into an executable program. The key unit of modularity is an aspect instead of a class. Aspect-Oriented programming breaks down the logic of the program into various parts known as concerns. A cross-cutting concern may affect the entire application and is centralized in one location in code like transaction security, management, logging, authentication, etc. It can also be considered as a dynamic decorator design pattern. This pattern also offers an additional behavior to be added to an existing class by wrapping the original class and duplicating its interface and removing the original. Core AOP Concepts There are seven core concepts in Aspect-Oriented Programming. Let's discuss them in detail: Aspect: An aspect is a class which allows implementing the JEE application. It concerns which cut across multiple classes, like transaction management, security, etc. Aspects can be a typical class configured using Spring XML configuration or a regular class annotated using @Aspect annotation. Joinpoint: It is a candidate point in the program execution where an aspect can be plugged in. It could be a method being called as an exception being thrown, or even a field which is modified. Advice: Advice are the actual actions taken for a specific joinpoint. This method will execute when a specific joinpoint meets a matching point in the application. Pointcut: It is an expression which can be matched with join points to check whether that advice should be executed or not. Target Object: Based on target object devices are applied. In AOP, a subclass is created at runtime where the target method should be overridden, and advice are included depending on their configuration. Proxy: This object should be created after applying the advice to the target object. Weaving: This is a method of linking an aspect with other application objects or types to build an advised object. Installation of Java Spring Here, is a step by step information to install Java Spring in your computer: Step 1) Go to www.eclipse.org. Step 2) Download Eclipse Neon installer and install it on your Windows system. Step 3) Click on "Download 64-bit" button. Step 4) Go to Eclipse IDE for Java Developers and click on "64-bit" link. Step 5) Click on "Windows 64-bit" link. Step 6) Click on the "Download" button to download the zip file. Step 7) Extract the download zip to a specific folder. Step 8) Click on the "Browse" button to select the workspace directory. Step 9) Click on "Select Folder" to select a folder. The process will be displayed as shown in the following screen. Step 10) Opening Eclipse Marketplace Client. Go to the Help menu. Click on "Eclipse Marketpalce" option. Step 11) Searching and installing Spring plugin. Write Spring in "Find" textbox. Click on the "Search" icon. Click on the "Install" button to install a plugin. Step 12) Confirm selected features and click on "Confirm" button. Step 13) Accepting terms and condition and installing the software. Click on "I accept the terms of the license agreements" radio button. Click on "Finish" button" to finish the installation. A welcome screen will be displayed with software installation progress. Step 14) Click on "Restart Now" button to restart Eclipse IDE and apply the changes. The following screen will be displayed: Advantages of Spring Framework Here, are important pros/ benefits of using spring. Spring allows developers to develop enterprise-class applications with the help of POJOs. Offers templates for Hibernate, JDBC, Hibernate, JPA, etc. to reduce avoid writing lengthy code. Provides abstraction to Java Enterprise Edition (JEE). You can organize a spring in a modular fashion. So that if a number of packages and classes are substantial, you only need to about you need and ignore the rest. It offers declarative support for transactions, formatting, validation, caching, etc. The application developed using spring is simple as the environment-dependent code is moved into this framework. Disadvantages of Spring Framework Here, are drawbacks/cons of Spring Framework. Java spring offers too many restrictions. Code is public is it is visible to all. It also not offers custom-built features. Summary: Spring framework is an easy to use open-source Java platform Predefined templates and loose couple are important features of Java spring Spring framework was written by Rod Johnson and was first released in June 2002 The Spring Framework provides 20 modules which can be used based on an application requirement. Java spring dispatcherServlet communicates with HandlerMapping. It also revokes controller associated with that specific request. Aspect-oriented programming allows the global properties of a program to decide how it is compiled into an executable program. The biggest advantage of Java Spring is that it allows developers to develop enterprise-class applications with the help of POJOs The biggest drawback of Java spring is that it offers too many restrictions.   Prev Report a Bug Next YOU MIGHT LIKE: JavaScript JavaScript Unit Testing Frameworks What is JavaScript? JavaScript is a programming language which is defined as high level, dynamic and... Read more Java Tutorials Top 25 JMS (Java Message Service) Interview Questions & Answers 1) What is JMS? JMS means Java Messaging Service. It is the new standard for inter client... Read more JavaScript QuickSort Algorithm in JavaScript What is Quick Sort? Quick Sort algorithm follows Divide and Conquer approach. It divides elements... Read more JavaScript TypeScript Tutorial: Types, Arrays, Enum, Classes, Interfaces What is Typescript? Typescript is a superset of JavaScript. TypeScript is pure object-oriented... Read more Java Tutorials String charAt() Method in Java with Example Why use string "charAt" Method? The charat method returns the character at the definite index. In this... Read more Java Tutorials String indexOf() Method in Java with EXAMPLE What is indexOf() Method in Java? indexOf() Method is used to get index of the first occurrence of a... Read more 1) Java Platform 2) Java Virtual Machine 3) How to install java 4) Download & Install Java in Linux 5) First Java Program 6) Concept of OOPs 7) Data Abstraction 8) Encapsulation 9) Java Variables 10) Class & Objects 11) Java Arrays 12) Array of Objects 13) ArrayList in Java 14) Java Strings 15) String Length() Method 16) String indexOf() Method 17) String charAt() Method 18) String compareTo() Method 19) String contains() Method 20) String endsWith() Method 21) Java String replace() 22) toLowercase() & toUpperCase() 23) Convert a Java String to Integer 24) HashMaps in Java 25) Command-line 26) This Keyword 27) Garbage Collection 28) Static Variables 29) Stack Heap 30) Inheritance 31) Polymorphism 32) Abstract Method & Class 33) Java Interface 34) Interface vs Abstract Class 35) Java Constructors 36) Java Packages 37) Exception Handling 38) User-defined 39) Throws 40) Trick with For Loop 41) Switch in Java 42) Maths with Java 43) Generate Random Number 44) Date in Java 45) Multithreading in Java 46) Java GUI – Swing 47) Split a String 48) Buffered Reader 49) Java Reflection API Tutorials 50) Check Prime Number 51) Convert JSON to XML using Gson and JAXB 52) Prime Number From 1 to 100 53) Convert Char to String 54) Fibonacci Series 55) Check Armstrong Number 56) Reverse String using Recursion 57) Check Palindrome Number 58) Bubble Sort Program 59) Insertion Sort Algorithm 60) Selection Sorting 61) Java Tools for Developers 62) Groovy Script Tutorial 63) Java Spring Tutorial 64) Apache ANT Tutorial 65) JasperReports Tutorial 66) C++ Vs JAVA 67) JDK Vs JRE Vs JVM 68) Java Vs C# 69) Java Vs Python 70) Java Vs Scala 71) Java Interview Q & A 72) Java Design Patterns Interview Q & A 73) JMS Interview Q & A 74) Groovy Interview Q & A 75) JAVA Programming PDF Java Tutorials Top Tutorials About About Us Advertise with Us Write For Us Contact Us Career Suggestion SAP Career Suggestion Tool Software Testing as a Career Selenium Testing Hacking Interesting eBook Blog Quiz SAP eBook SAP Java Python Execute online Execute Java Online Execute Javascript Execute HTML Execute Python Jmeter Informatica JIRA © Copyright - Guru99 2020         Privacy Policy  |  Affiliate Disclaimer  |  ToS
