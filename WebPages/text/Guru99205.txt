https://www.guru99.com//java-interface.html
What is Interface in Java with Example Home Testing Back Agile Testing BugZilla Cucumber Database Testing ETL Testing Jmeter JIRA Back JUnit LoadRunner Manual Testing Mobile Testing Mantis Postman QTP Back Quality Center (ALM) RPA SAP Testing Selenium SoapUI Test Management TestLink SAP Back ABAP APO Beginner Basis BODS BI BPC CO Back CRM Crystal Reports FICO HANA HR MM QM Payroll Back PI/PO PP SD SAPUI5 Security Solution Manager Successfactors SAP Tutorials Web Back Apache Android AngularJS ASP.Net C C# C++ CodeIgniter DBMS Back Java JavaScript JSP Kotlin Linux MariaDB MS Access MYSQL Node.js Back Perl PHP PL/SQL PostgreSQL Python ReactJS Ruby & Rails Scala SQL Back SQL Server SQLite UML VB.Net VBScript Web Services WPF Must Learn! Back Accounting Algorithms Blockchain Business Analyst Build Website CCNA Cloud Computing COBOL Compiler Design Embedded Systems Back Ethical Hacking Excel Tutorials Go Programming IoT ITIL Jenkins MIS Networking Operating System Prep Back PMP Photoshop Project Management Reviews Salesforce SEO Software Engineering VBA Big Data Back AWS BigData Cassandra Cognos Data Warehousing DevOps HBase Back Hive Informatica MicroStrategy MongoDB NiFi OBIEE Pentaho Back Power BI Qlikview Tableau Talend ZooKeeper Live Projects Back Live Agile Testing Live HP ALM Live Java Project Live Mobile Testing Live Payment Gateway Live PHP Project Live Projects Hub Live Python Project Back Live Selenium Project Live Selenium 2 Live Security Testing Live Testing Project Live Testing 2 Live Telecom Live UFT/QTP Testing AI Back Artificial Intelligence Data Science Keras NLTK Back NumPy PyTorch R Programming TensorFlow Blog What is Interface in Java with Example Details Last Updated: 25 March 2020 What is an Interface? An interface is just like Java Class, but it only has static constants and abstract method. Java uses Interface to implement multiple inheritance. A Java class can implement multiple Java Interfaces. All methods in an interface are implicitly public and abstract. Syntax for Declaring Interface interface {
//methods
}

 To use an interface in your class, append the keyword "implements" after your class name followed by the interface name. Example for Implementing Interface class Dog implements Pet
 interface RidableAnimal extends Animal, Vehicle Click here if the video is not accessible Why is an Interface required? To understand the concept of Java Interface better, let see an example. The class "Media Player" has two subclasses: CD player and DVD player. Each having its unique implementation method to play music. Another class "Combo drive" is inheriting both CD and DVD (see image below). Which play method should it inherit? This may cause serious design issues. And hence, Java does not allow multiple inheritance. Now let's take another example of Dog. Suppose you have a requirement where class "dog" inheriting class "animal" and "Pet" (see image below). But you cannot extend two classes in Java. So what would you do? The solution is Interface. The rulebook for interface says, An interface is 100% abstract class and has only abstract methods. Class can implement any number of interfaces. Class Dog can extend to class "Animal" and implement interface as "Pet". Java Interface Example: Step 1) Copy following code into an editor. interface Pet{
  public void test();
}
class Dog implements Pet{
   public void test(){
     System.out.println("Interface Method Implemented");
  }
   public static void main(String args[]){
     Pet p = new Dog();
     p.test();
  }
}
 Step 2) Save , Compile & Run the code. Observe the Output. Difference between Class and Interface Class Interface In class, you can instantiate variable and create an object. In an interface, you can't instantiate variable and create an object. Class can contain concrete(with implementation) methods The interface cannot contain concrete(with implementation) methods The access specifiers used with classes are private, protected and public. In Interface only one specifier is used- Public. When to use Interface and Abstract Class? Use an abstract class when a template needs to be defined for a group of subclasses Use an interface when a role needs to be defined for other classes, regardless of the inheritance tree of these classes Must know facts about Interface A Java class can implement multiple Java Interfaces. It is necessary that the class must implement all the methods declared in the interfaces. Class should override all the abstract methods declared in the interface The interface allows sending a message to an object without concerning which classes it belongs. Class needs to provide functionality for the methods declared in the interface. All methods in an interface are implicitly public and abstract An interface cannot be instantiated An interface reference can point to objects of its implementing classes An interface can extend from one or many interfaces. Class can extend only one class but implement any number of interfaces An interface cannot implement another Interface. It has to extend another interface if needed. An interface which is declared inside another interface is referred as nested interface At the time of declaration, interface variable must be initialized. Otherwise, the compiler will throw an error. The class cannot implement two interfaces in java that have methods with same name but different return type. Summary: The class which implements the interface needs to provide functionality for the methods declared in the interface All methods in an interface are implicitly public and abstract An interface cannot be instantiated An interface reference can point to objects of its implementing classes An interface can extend from one or many interfaces. A class can extend only one class but implement any number of interfaces   Prev Report a Bug Next YOU MIGHT LIKE: JavaScript 90 Best JavaScript Certification Courses in 2020 Following is a curated list of Top 90 JavaScript Courses for beginners and professionals. Learning... Read more Java Tutorials Java vs Scala: What is the Difference? What is Java? Java is a multi-platform, object-oriented, network-centric, programming language... Read more Java Tutorials String Length() Method in Java with Example What is String "Length" Method in Java? This function is used to get the length of a Java String.... Read more Java Tutorials Apache ANT Tutorial: Installation, Project Structure, Build Example What is a Build Tool? A build tool is a programming tool which is used to build a new version of a... Read more JavaScript TypeScript Tutorial: Types, Arrays, Enum, Classes, Interfaces What is Typescript? Typescript is a superset of JavaScript. TypeScript is pure object-oriented... Read more Java Tutorials JAVA Programming Tutorial for Beginners PDF Java is the most popular programming language & is the language of choice for Android programming. Key... Read more 1) Java Platform 2) Java Virtual Machine 3) How to install java 4) Download & Install Java in Linux 5) First Java Program 6) Concept of OOPs 7) Data Abstraction 8) Encapsulation 9) Java Variables 10) Class & Objects 11) Java Arrays 12) Array of Objects 13) ArrayList in Java 14) Java Strings 15) String Length() Method 16) String indexOf() Method 17) String charAt() Method 18) String compareTo() Method 19) String contains() Method 20) String endsWith() Method 21) Java String replace() 22) toLowercase() & toUpperCase() 23) Convert a Java String to Integer 24) HashMaps in Java 25) Command-line 26) This Keyword 27) Garbage Collection 28) Static Variables 29) Stack Heap 30) Inheritance 31) Polymorphism 32) Abstract Method & Class 33) Java Interface 34) Interface vs Abstract Class 35) Java Constructors 36) Java Packages 37) Exception Handling 38) User-defined 39) Throws 40) Trick with For Loop 41) Switch in Java 42) Maths with Java 43) Generate Random Number 44) Date in Java 45) Multithreading in Java 46) Java GUI – Swing 47) Split a String 48) Buffered Reader 49) Java Reflection API Tutorials 50) Check Prime Number 51) Convert JSON to XML using Gson and JAXB 52) Prime Number From 1 to 100 53) Convert Char to String 54) Fibonacci Series 55) Check Armstrong Number 56) Reverse String using Recursion 57) Check Palindrome Number 58) Bubble Sort Program 59) Insertion Sort Algorithm 60) Selection Sorting 61) Java Tools for Developers 62) Groovy Script Tutorial 63) Java Spring Tutorial 64) Apache ANT Tutorial 65) JasperReports Tutorial 66) C++ Vs JAVA 67) JDK Vs JRE Vs JVM 68) Java Vs C# 69) Java Vs Python 70) Java Vs Scala 71) Java Interview Q & A 72) Java Design Patterns Interview Q & A 73) JMS Interview Q & A 74) Groovy Interview Q & A 75) JAVA Programming PDF Java Tutorials Top Tutorials About About Us Advertise with Us Write For Us Contact Us Career Suggestion SAP Career Suggestion Tool Software Testing as a Career Selenium Testing Hacking Interesting eBook Blog Quiz SAP eBook SAP Java Python Execute online Execute Java Online Execute Javascript Execute HTML Execute Python Jmeter Informatica JIRA © Copyright - Guru99 2020         Privacy Policy  |  Affiliate Disclaimer  |  ToS
