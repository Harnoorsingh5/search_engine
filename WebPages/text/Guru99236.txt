https://www.guru99.com//apache-ant-tutorial.html
Apache ANT Tutorial: Installation, Project Structure, Build Example Home Testing Back Agile Testing BugZilla Cucumber Database Testing ETL Testing Jmeter JIRA Back JUnit LoadRunner Manual Testing Mobile Testing Mantis Postman QTP Back Quality Center (ALM) RPA SAP Testing Selenium SoapUI Test Management TestLink SAP Back ABAP APO Beginner Basis BODS BI BPC CO Back CRM Crystal Reports FICO HANA HR MM QM Payroll Back PI/PO PP SD SAPUI5 Security Solution Manager Successfactors SAP Tutorials Web Back Apache Android AngularJS ASP.Net C C# C++ CodeIgniter DBMS Back Java JavaScript JSP Kotlin Linux MariaDB MS Access MYSQL Node.js Back Perl PHP PL/SQL PostgreSQL Python ReactJS Ruby & Rails Scala SQL Back SQL Server SQLite UML VB.Net VBScript Web Services WPF Must Learn! Back Accounting Algorithms Blockchain Business Analyst Build Website CCNA Cloud Computing COBOL Compiler Design Embedded Systems Back Ethical Hacking Excel Tutorials Go Programming IoT ITIL Jenkins MIS Networking Operating System Prep Back PMP Photoshop Project Management Reviews Salesforce SEO Software Engineering VBA Big Data Back AWS BigData Cassandra Cognos Data Warehousing DevOps HBase Back Hive Informatica MicroStrategy MongoDB NiFi OBIEE Pentaho Back Power BI Qlikview Tableau Talend ZooKeeper Live Projects Back Live Agile Testing Live HP ALM Live Java Project Live Mobile Testing Live Payment Gateway Live PHP Project Live Projects Hub Live Python Project Back Live Selenium Project Live Selenium 2 Live Security Testing Live Testing Project Live Testing 2 Live Telecom Live UFT/QTP Testing AI Back Artificial Intelligence Data Science Keras NLTK Back NumPy PyTorch R Programming TensorFlow Blog Apache ANT Tutorial: Installation, Project Structure, Build Example Details Last Updated: 25 March 2020 What is a Build Tool? A build tool is a programming tool which is used to build a new version of a program. It automates the creation of an executable application from any source code. What is the Apache Ant Build Tool? Ant is an acronym for Another Neat Tool. It is an XML based build tool which is a widely used Java-based build tool with the full portability of the pure Java code. For example, it allows developers to adopt agile principles and allows test-driven development. You can use it for all the repetitive tasks. For example, generating documentation. In this Ant tutorial for beginners, you will learn: What is a Build Tool? What is the Apache Ant Build Tool? Why use need Build tool like ANT? History of Apache Ant Features of Apache Ant Installation and Configuration of Apache Ant Example of Apache ANT ANT Project Structure Best practices of Using Apache Ant Advantages of Using Apache Ant Why use need Build tool like ANT? Here, are important pros/benefits of using the Build tool: Build tool allows you to automate specific repetitive tasks for like compiling the source code, running software tests, and creating files for the software deployment. Build tools mostly run without a graphical user interface. Helps you to convert source code into executable code Offers an option to recompile a file only if necessary Allows you to compile numbers of files in a relatively short time Two widely popular build tools used by Java developers are Apache Maven and Ant. History of Apache Ant Here, are important historical landmarks from the Apache Ant tool: James Duncan Davidson created an Ant on July 2000. It was initially used to build Tomcat and was comes as an in-built product of Tomcat distribution kit. In May 2014, Apache Ant version 1.9.4 released with many advanced features. It's the latest version is 1.10.3 which was released on March 2018. Features of Apache Ant Here, are essential features of Apache Ant: It's an open-source project. Allow you to run builds on both Windows and UNIX/Linux systems. You only require JVM as It runs anywhere when JVM is available. Offers an extensive range of predefined tasks Helps you to copy from one location to another. Offers interface to develop custom tasks. Allows you to invoke from the command line which can easily integrate with free and commercial IDEs. Allows you to deploy the binaries to the test server Offers Extensible Architecture Offers Backward Compatibility Installation and Configuration of Apache Ant We are assuming that you have already downloaded and installed the Java Development Kit (JDK) into your computer. Make sure that the JAVA_HOME environment variable is set to the folder where your JDK is installed. Step 1) Download the binaries from https://ant.apache.org/bindownload.cgi Step 2) Unzip this zip file to a convenient location c:\folder. Using Winzip, WinRAR, 7-zip, or similar tools. Step 3) Create an environment variable for "ANT_HOME" and assign the value of a variable to the location of the Ant folder. Right-click on This PC icon. Click on Properties Step 4) Click on "Advanced system settings". Step 5) Click on "Advanced" tab. Step 6) Click on "Environment variables…" button. Step 7) Click on "New" to create a new user variable. Step 8) Enter new user variable details Enter variable name as ANT_HOME. Enter variable value as C:\apache-ant-1.9.14-bin\apache-ant-1.9.14\bin. Click on "OK" button. Step 9) Click on "OK" button. Step 10) Click on "OK" to close the screen. You can verify for the successful Ant installation by typing "ant -version" command in the command prompt. You will see the following screen: Example of Apache ANT 
<?xml version="1.0"?>
<project>
<target name="hello">
<echo>Hello, World</echo> </target>
</project>
 Let's save this as "buildl.xml" Goto CMD and move to the dir where you have put the simplebuild.xml Now write, ant-file buildl.xml Hello_World_Target. This should show us Hello World. ANT Project Structure Every build will contain three nodes: Project Target Task Project: Everything inside the build file in Apache ANT is under a project. Attributes: Name The name of a project. Basedir: This the directory from where all the paths will be calculated. This can be overridden by using "basedir" property. Default: Helps you to define the default target for this project. If no target is given, then it will execute the "default." Target: Target is a set of tasks, which is defined to get a specific state for the build process. Attributes: Name: Nate of the target (required) Description: Description of the target Depends: Which target this current target depend upon. If: Executes the target only if a value is set for a target property Unless: Executes the target if the property value is not set Tasks: It's a piece of code which can be executed. Task have multiple argument or attributes. The general method pattern to write task is: <name attribute1="value" attribute2="value2"…/> You can either use the build in a task, or you can build your own task. Best practices of Using Apache Ant Here, are some best practices to use Apache Ant. You should automate build numbering using property files. Implementing a configurable build with the help of default and build property files. These files allow you to store properties that define the data for your build process, like compiler version and optimization settings, etc. You can reuse prebuilt libraries using library property files. Advantages of Using Apache Ant Here, are pros/ benefits of using Apache Ant: It is Ant. It is platform-neutral, so it helps you to manage platform-centric properties such as file separators. Ant allows you to perform platform-specific tasks like modifying the modified time of a file using 'touch' command. Ant scripts are written using plain XML so If you are already familiar with XML, you will able to learn Ant quickly. Ant offers a big list of predefined tasks. It offers an interface to developing customize tasks. You can easily invoke ant from the command line. It allows you to integrate with free and commercial IDEs. You need JVM: It runs anywhere JVM is available. Apache Ant is an open-source library which allows users to access the source code and reproduce it. Apache Ant is a cross-platform tool which allows you to handle Java classpath and file directory structure in an affordable manner. Apache Ant is easily extensible using Java and other programming languages. Apache Ant offers built-in support for J2EE development like EJB compilation and packaging. You can use it for the small personal project which can also be used in a large software project or on their website. Summary A build tool is a programming tool which is used to build a new version of a program. Ant (an acronym for Another Neat Tool) is an XML based build tool. It is a widely used Java-based build tool with the full portability of the pure Java code. Apache ANT helps you to convert source code into executable code. James Duncan Davidson created ant in July 2000. Apache ANT offers an extensive range of predefined tasks. Every build will contain three nodes: 1) Project 2) Target 3) Task. Everything inside the build file in Apache ANT is under a project. Target is a set of tasks, which is defined to get a specific state for the build process. A task is a piece of code which can be executed. Task have multiple argument or attributes. It is the best practice to automate build numbering using property files in Apache ANT. The biggest advantage of Apache ANT is that it is platform-neutral, so it helps you to manage platform-centric properties such as file separators.   Prev Report a Bug Next YOU MIGHT LIKE: Java Tutorials Armstrong Number Program in JAVA What is Armstrong Number ? In an Armstrong Number, the sum of power of individual digits is equal... Read more Java Tutorials Top 100 Java Interview Questions with Answers Q1. What is the difference between an Inner Class and a Sub-Class? Ans: An Inner class is a class... Read more Java Tutorials Java vs Python: What's the Difference? What is Java? Java is a multi-platform, object-oriented, and network-centric, programming... Read more Java Tutorials Java String replace(), replaceFirst() & replaceAll() Method EXAMPLE Java String has three types of Replace method replace replaceAll replaceFirst. With the help of... Read more Java Tutorials Java Spring Tutorial: Features, History, MVC Framework Architecture What is the Spring framework? Spring is a easy to use open-source Java MVC framework provides... Read more Java Tutorials How to easily Generate Random Numbers in Java In this tutorial, we will learn about Generate Random Numbers- Using Java Random Class Using Java... Read more 1) Java Platform 2) Java Virtual Machine 3) How to install java 4) Download & Install Java in Linux 5) First Java Program 6) Concept of OOPs 7) Data Abstraction 8) Encapsulation 9) Java Variables 10) Class & Objects 11) Java Arrays 12) Array of Objects 13) ArrayList in Java 14) Java Strings 15) String Length() Method 16) String indexOf() Method 17) String charAt() Method 18) String compareTo() Method 19) String contains() Method 20) String endsWith() Method 21) Java String replace() 22) toLowercase() & toUpperCase() 23) Convert a Java String to Integer 24) HashMaps in Java 25) Command-line 26) This Keyword 27) Garbage Collection 28) Static Variables 29) Stack Heap 30) Inheritance 31) Polymorphism 32) Abstract Method & Class 33) Java Interface 34) Interface vs Abstract Class 35) Java Constructors 36) Java Packages 37) Exception Handling 38) User-defined 39) Throws 40) Trick with For Loop 41) Switch in Java 42) Maths with Java 43) Generate Random Number 44) Date in Java 45) Multithreading in Java 46) Java GUI – Swing 47) Split a String 48) Buffered Reader 49) Java Reflection API Tutorials 50) Check Prime Number 51) Convert JSON to XML using Gson and JAXB 52) Prime Number From 1 to 100 53) Convert Char to String 54) Fibonacci Series 55) Check Armstrong Number 56) Reverse String using Recursion 57) Check Palindrome Number 58) Bubble Sort Program 59) Insertion Sort Algorithm 60) Selection Sorting 61) Java Tools for Developers 62) Groovy Script Tutorial 63) Java Spring Tutorial 64) Apache ANT Tutorial 65) JasperReports Tutorial 66) C++ Vs JAVA 67) JDK Vs JRE Vs JVM 68) Java Vs C# 69) Java Vs Python 70) Java Vs Scala 71) Java Interview Q & A 72) Java Design Patterns Interview Q & A 73) JMS Interview Q & A 74) Groovy Interview Q & A 75) JAVA Programming PDF Java Tutorials Top Tutorials About About Us Advertise with Us Write For Us Contact Us Career Suggestion SAP Career Suggestion Tool Software Testing as a Career Selenium Testing Hacking Interesting eBook Blog Quiz SAP eBook SAP Java Python Execute online Execute Java Online Execute Javascript Execute HTML Execute Python Jmeter Informatica JIRA © Copyright - Guru99 2020         Privacy Policy  |  Affiliate Disclaimer  |  ToS
